// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
/// 
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return FirebaseOptions(
        apiKey: 'AIzaSyAiPzBg3xmVl-mo606En3RunPO2Vmq7UU8',
        appId: '1:267004637492:web:63c18921826a3791053561',
        messagingSenderId: '267004637492',
        projectId: 'universe-123',
        authDomain: 'universe-123.firebaseapp.com',
        storageBucket: 'universe-123.firebasestorage.app',
        measurementId: 'G-G39DHQ3RVQ',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyAiPzBg3xmVl-mo606En3RunPO2Vmq7UU8',
    appId: '1:267004637492:web:63c18921826a3791053561',
    messagingSenderId: '267004637492',
    projectId: 'universe-123',
    authDomain: 'universe-123.firebaseapp.com',
    storageBucket: 'universe-123.firebasestorage.app',
    measurementId: 'G-G39DHQ3RVQ',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDjaOA58K_u8JLzpaNamwwzHrSrfkBvs5Q',
    appId: '1:267004637492:android:c10bbeca716700f5053561',
    messagingSenderId: '267004637492',
    projectId: 'universe-123',
    storageBucket: 'universe-123.firebasestorage.app',
  );
}
